#include <iostream>
#include <ctime>
#include <thread>
#include <chrono>

class SmartCradle {
private:
    bool isCrying;
    double humidity;
    double temperature;

public:
    SmartCradle() : isCrying(false), humidity(0.0), temperature(0.0) {}

    void detectCry() {
        isCrying = (rand() % 2 == 0); 
    }

    void measureEnvironment() {
 
        humidity = rand() % 101;  
        temperature = 20 + rand() % 11; 
    }

    void displayStatus() {
        std::cout << "Crying: " << (isCrying ? "Yes" : "No") << std::endl;
        std::cout << "Humidity: " << humidity << "%" << std::endl;
        std::cout << "Temperature: " << temperature << "Â°C" << std::endl;
    }

    void sendNotification() {
        if (isCrying) {
            std::cout << "Sending notification: Baby is crying!" << std::endl;
           
        }
    }
};

int main() {
    srand(time(0)); 

    SmartCradle smartCradle;

    for (int i = 0; i < 5; ++i) {
        smartCradle.detectCry();
        smartCradle.measureEnvironment();
        smartCradle.displayStatus();
        smartCradle.sendNotification();
        
        std::this_thread::sleep_for(std::chrono::seconds(3));

        std::cout << "---------------------" << std::endl;
    }

    return 0;
}
